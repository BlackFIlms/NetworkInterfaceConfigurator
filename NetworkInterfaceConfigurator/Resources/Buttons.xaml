<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:NetworkInterfaceConfigurator.Resources"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <Style x:Key="WindowStyleHeaderButton" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Foreground" Value="{StaticResource BrushLightGray}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="PART_border"
                            Background="Transparent"
                            />
                        <ContentPresenter />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="{StaticResource BrushRoyalBlue}" />
                            <Setter TargetName="PART_border" Property="Opacity" Value="1" />
                            <Setter Property="Foreground" Value="{StaticResource BrushWhite}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="{StaticResource BrushLightBlue}"/>
                            <Setter TargetName="PART_border" Property="Opacity" Value="1" />
                            <Setter Property="Foreground" Value="{StaticResource BrushABlack}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridPresetsButtons" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Background" Value="{StaticResource BrushVeryDarkGray}"/>
        <Setter Property="Foreground" Value="{StaticResource BrushWhite}"/>
        <Setter Property="FontSize" Value="{StaticResource Big}"/>
        <Setter Property="FontFamily" Value="{StaticResource BoldFont-Light}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="PART_border"
                            Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
                            />
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" Value="Active">
                            <Setter TargetName="PART_border" Property="Background" Value="{StaticResource BrushRoyalBlue}" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="{StaticResource BrushRoyalBlue}" />
                            <Setter TargetName="PART_border" Property="Opacity" Value="1" />
                            <Setter Property="Foreground" Value="{StaticResource BrushWhite}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="{StaticResource BrushLightBlue}"/>
                            <Setter TargetName="PART_border" Property="Opacity" Value="1" />
                            <Setter Property="Foreground" Value="{StaticResource BrushWhite}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GridAdapterButtons" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="38, 0, 0, 0"/>
        <Setter Property="Width" Value="69" />
        <Setter Property="Height" Value="22" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Background" Value="{StaticResource BrushRoyalBlue}"/>
        <Setter Property="Foreground" Value="{StaticResource BrushWhite}"/>
        <Setter Property="FontSize" Value="{StaticResource Regular}"/>
        <Setter Property="FontFamily" Value="{StaticResource StandartText-Light}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="PART_border"
                            Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
                            CornerRadius="6"
                            />
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="{StaticResource BrushLightBlue}" />
                            <Setter TargetName="PART_border" Property="Opacity" Value="1" />
                            <Setter Property="Foreground" Value="{StaticResource BrushWhite}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_border" Property="Background" Value="{StaticResource BrushPressedLightBlue}"/>
                            <Setter TargetName="PART_border" Property="Opacity" Value="1" />
                            <Setter Property="Foreground" Value="{StaticResource BrushWhite}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MacRandButton" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="0, 0, 0, 0"/>
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Background" Value="{StaticResource BrushVeryDarkGray}"/>
        <Setter Property="Foreground" Value="{StaticResource BrushWhite}"/>
        <Setter Property="FontSize" Value="{StaticResource Regular}"/>
        <Setter Property="FontFamily" Value="{StaticResource StandartText-Bold}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="PART_border"
                            Background="Transparent">

                            <Control x:Name="RandomBorder"
                                     Background="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}"
                                     Foreground="{StaticResource BrushABlack}"
                                     Template="{StaticResource RandomBorder}"
                                     Grid.Column="1">
                            </Control>
                        </Border>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="RandomBorder" Property="Background" Value="{StaticResource BrushLightBlue}" />
                            <Setter TargetName="RandomBorder" Property="Foreground" Value="{StaticResource BrushABlack}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="RandomBorder" Property="Background" Value="{StaticResource BrushPressedLightBlue}"/>
                            <Setter TargetName="RandomBorder" Property="Foreground" Value="{StaticResource BrushABlack}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>