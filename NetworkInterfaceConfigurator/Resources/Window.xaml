<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:NetworkInterfaceConfigurator.Resources"
                    xmlns:views="clr-namespace:NetworkInterfaceConfigurator.Views"
                    xmlns:viewmodel="clr-namespace:NetworkInterfaceConfigurator.ViewModels">

    <!--
    Redefine styles for Window.
    We must write Border with magic number in this template.
    Because it's wasn't work in MainWindow!
    And in order to change the icon for the "Maximize" button, you need a trigger: "Window state".
    And all code which describe window style, better write not in the MainWindow file =)
    -->
    <Style x:Key="WindowStyle" TargetType="{x:Type Window}">
        <Setter Property="AllowsTransparency" Value="true" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <!--
                    7 is a magic number. By default Windows fits a maximized window with Margin
                    7 7 7 7 to fill entire screen (WPF .Net 4.5). Larger numbers produce a gap
                    between maximized window and screen edges; smaller numbers show parts of
                    the window outside of the current monitor on multi-display computers.
                    -->
                    <Grid
                        Margin="7"
                        TextOptions.TextRenderingMode="ClearType"
                        TextOptions.TextFormattingMode="Display">
                        <Border
                            x:Name="PART_Border"
                            Width="Auto"
                            Height="Auto"
                            Background="{StaticResource BrushDarkBlue}"
                            BorderBrush="RoyalBlue"
                            BorderThickness="0"
                            Padding="0">
                            <Border.Effect>
                                <DropShadowEffect
                                    Color="black"
                                    Opacity="0.5"
                                    BlurRadius="7"
                                    ShadowDepth="2"
                                    Direction="315"/>
                            </Border.Effect>
                            <DockPanel   
                                HorizontalAlignment="Stretch"
                                Background="Transparent"
                                VerticalAlignment="Stretch"
                                >
                                <Border
                                    x:Name="TitleBar"
                                    DockPanel.Dock="Top"
                                    Background="{StaticResource BrushDarkGrey}"
                                    BorderThickness="0"
                                    >
                                    <Grid Height="18">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="20"/>
                                            <ColumnDefinition Width="4*"/>
                                            <ColumnDefinition Width="10*"/>
                                            <ColumnDefinition Width="100"/>
                                        </Grid.ColumnDefinitions>
                                        <!-- SizeObserver calculate actual sizes of the element -->
                                        <!-- Observe - Set ObservedWidth & ObservedHeight properties in SizeObserver class -->
                                        <!-- ObservedWidth & ObservedHeight - Binding property value to VM field or property -->
                                        <Label
                                            x:Name="Icon"
                                            viewmodel:SizeObserver.Observe="True"
                                            viewmodel:SizeObserver.ObservedWidth="{Binding GetIconHeaderWidth, Mode=OneWayToSource}"
                                            Style="{StaticResource AppIcon}"
                                            Grid.Column="0"
                                            />
                                        <!-- SizeObserver calculate actual sizes of the element -->
                                        <!-- Observe - Set ObservedWidth & ObservedHeight properties in SizeObserver class -->
                                        <!-- ObservedWidth & ObservedHeight - Binding property value to VM field or property -->
                                        <StackPanel
                                            x:Name="Menu"
                                            viewmodel:SizeObserver.Observe="True"
                                            viewmodel:SizeObserver.ObservedWidth="{Binding GetMenuHeaderWidth, Mode=OneWayToSource}"
                                            Orientation="Horizontal"
                                            HorizontalAlignment="Stretch"
                                            Grid.Column="1">
                                            <Menu Background="{StaticResource BrushDarkGrey}"
                                                  Foreground="{StaticResource BrushLightGrey}"
                                                  Margin="5, 0, 0, 0"
                                                  VerticalAlignment="Center">
                                                <MenuItem Header="File"
                                                          Background="{StaticResource BrushDarkGrey}">
                                                    <TextBlock>Open</TextBlock>
                                                    <TextBlock>Save</TextBlock>
                                                    <TextBlock>Options</TextBlock>
                                                    <TextBlock>Exit</TextBlock>
                                                </MenuItem>
                                                <MenuItem Header="Help">
                                                    <TextBlock>Updates</TextBlock>
                                                    <TextBlock>About</TextBlock>
                                                </MenuItem>
                                            </Menu>
                                        </StackPanel>
                                        <!-- SizeObserver calculate actual sizes of the element -->
                                        <!-- Observe - Set ObservedWidth & ObservedHeight properties in SizeObserver class -->
                                        <!-- ObservedWidth & ObservedHeight - Binding property value to VM field or property -->
                                        <TextBlock
                                            x:Name="Title"
                                            viewmodel:SizeObserver.Observe="True"
                                            viewmodel:SizeObserver.ObservedWidth="{Binding GetTitleHeaderWidth, Mode=OneWayToSource}"
                                            Text="{Binding Path=Title, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                            Foreground="{StaticResource BrushWhite}"
                                            FontFamily="{StaticResource WideFont-Medium}"
                                            FontSize="{StaticResource Big}"
                                            Margin="{Binding CenterTitle}"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Grid.Column="2"
                                            />
                                        <StackPanel
                                            Orientation="Horizontal"
                                            HorizontalAlignment="Right"
                                            VerticalAlignment="Top"
                                            Grid.Column="3" >
                                            <Button
                                                x:Name="MinButton"
                                                Width="33"
                                                Height="18"
                                                Style="{StaticResource WindowStyleHeaderButton}"
                                                Command="{Binding Path=MinWin}"
                                                CommandParameter="{Binding ElementName=nameMainWindow}"
                                                >
                                                <Label UseLayoutRounding="True"  x:Name="LabelMinButton" Style="{StaticResource MinimizeIcon}"/>
                                            </Button>
                                            <Button
                                                x:Name="MaxButton"
                                                Width="33"
                                                Height="18"
                                                Style="{StaticResource WindowStyleHeaderButton}"
                                                Command="{Binding Path=MaxWin}"
                                                CommandParameter="{Binding ElementName=nameMainWindow}"
                                                >
                                                <Label x:Name="LabelMaxButton" Style="{StaticResource MaximizeIconRestored}"/>
                                            </Button>
                                            <Button
                                                x:Name="CloseButton"
                                                Width="34"
                                                Height="18"
                                                Style="{StaticResource WindowStyleHeaderButton}"
                                                Command="{Binding Path=CloseWin}"
                                                CommandParameter="{Binding ElementName=nameMainWindow}"
                                                >
                                                <Label x:Name="LabelCloseButton" Style="{StaticResource CloseIcon}"/>
                                            </Button>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                                <ContentPresenter />
                            </DockPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Change Maximize icon if window state changed -->
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="LabelMaxButton" Property="Style" Value="{StaticResource MaximizeIconNormal}"/>
                        </Trigger>
                        <!-- Unused trigger for border -->
                        <Trigger Property="IsActive" Value="False">
                            <Setter TargetName="PART_Border" Property="BorderBrush" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>