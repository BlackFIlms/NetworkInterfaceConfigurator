<Window x:Class="NetworkInterfaceConfigurator.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NetworkInterfaceConfigurator"
        xmlns:viewmodel="clr-namespace:NetworkInterfaceConfigurator.ViewModels"
        xmlns:view="clr-namespace:NetworkInterfaceConfigurator.Views"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
        x:Name="nameMainWindow"
        Style="{StaticResource WindowStyle}"
        viewmodel:SizeObserver.Observe="True"
        viewmodel:SizeObserver.ObservedWidth="{Binding GetWindowWidth, Mode=OneWayToSource}"
        Icon="/NetworkInterfaceConfigurator;component/Design/Icon-3-64.ico"
        Title="Network Interface Configurator"
        Height="446"
        Width="700"
        MinHeight="446"
        MinWidth="700"
        WindowStartupLocation="CenterScreen">

    <Window.DataContext>
        <viewmodel:MainViewModel />
    </Window.DataContext>

    <i:Interaction.Triggers>
        <!-- Drag window -->
        <!-- MouseLeftButtonDown - action of UIElement -->
        <i:EventTrigger EventName="MouseLeftButtonDown">
            <i:InvokeCommandAction 
                Command="{Binding DragWindow}"
                CommandParameter="{Binding ElementName=nameMainWindow}" />
        </i:EventTrigger>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction 
                Command="{Binding CalcMarginTitle}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="SizeChanged">
            <i:InvokeCommandAction 
                Command="{Binding CalcMarginTitle}"/>
        </i:EventTrigger>
        
    </i:Interaction.Triggers>

    <Grid x:Name="gridBase">
        <Grid.RowDefinitions>
            <RowDefinition Height="18"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="18"/>
        </Grid.RowDefinitions>
        <Grid x:Name="gridHeader" Grid.Row="0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="100"/>
                </Grid.ColumnDefinitions>
                <!-- SizeObserver calculate actual sizes of the element -->
                <!-- Observe - Set ObservedWidth & ObservedHeight properties in SizeObserver class -->
                <!-- ObservedWidth & ObservedHeight - Binding property value to VM field or property -->
                <Label x:Name="headerIcon"
                       Style="{StaticResource AppIcon}"
                       viewmodel:SizeObserver.Observe="True"
                       viewmodel:SizeObserver.ObservedWidth="{Binding GetIconHeaderWidth, Mode=OneWayToSource}"
                       Grid.Column="0"/>

                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="4*"/>
                        <ColumnDefinition Width="10*"/>
                    </Grid.ColumnDefinitions>
                    <!-- SizeObserver calculate actual sizes of the element -->
                    <!-- Observe - Set ObservedWidth & ObservedHeight properties in SizeObserver class -->
                    <!-- ObservedWidth & ObservedHeight - Binding property value to VM field or property -->
                    <Grid x:Name="unstableGrid"
                        viewmodel:SizeObserver.Observe="True"
                        viewmodel:SizeObserver.ObservedWidth="{Binding GetMenuHeaderWidth, Mode=OneWayToSource}"
                        Background="Red"
                        Grid.Column="0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SizeChanged">
                                <i:InvokeCommandAction Command="{Binding StableGridWidth}"
                                CommandParameter="{Binding ElementName=unstableGrid}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <StackPanel
                        x:Name="headerMenu"
                        Orientation="Horizontal"
                        HorizontalAlignment="Stretch">

                        </StackPanel>
                    </Grid>
                    <TextBlock
                        x:Name="headerTitle"
                        viewmodel:SizeObserver.Observe="True"
                        viewmodel:SizeObserver.ObservedWidth="{Binding GetTitleHeaderWidth, Mode=OneWayToSource}"
                        Text="Network Interface Configurator"
                        FontFamily="{StaticResource WideFont}"
                        FontSize="{StaticResource Big}"
                        Margin="{Binding CenterTitle}"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Grid.Column="1"/>
                </Grid>
                
                <StackPanel
                    Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Grid.Column="2" >
                    <Button 
                        Width="100" 
                        Content="Min window"
                        Command="{Binding MinWin}"
                        CommandParameter="{Binding ElementName=nameMainWindow}">
                    </Button>
                    <Button 
                        Width="100"
                        Content="Max window"
                        Command="{Binding MaxWin}"
                        CommandParameter="{Binding ElementName=nameMainWindow}">
                    </Button>
                    <Button 
                        Width="100"
                        Content="Close window"
                        Command="{Binding CloseWin}"
                        CommandParameter="{Binding ElementName=nameMainWindow}">
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>
        <Grid x:Name="gridMain" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid x:Name="gridPresets" Grid.Column="0">

            </Grid>
            <Grid x:Name="gridContent" Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="48"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="61"/>
                </Grid.RowDefinitions>
                <Grid x:Name="gridAdapterField" Grid.Row="0">

                </Grid>
                <Grid x:Name="gridAdapterData" Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="267"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid x:Name="gridAdapterSettings" Grid.Column="0">

                    </Grid>
                    <Grid x:Name="gridAdapterStats" Grid.Column="1">

                    </Grid>
                </Grid>
                <Grid x:Name="gridAdapterButtons" Grid.Row="2">

                </Grid>
            </Grid>
        </Grid>
        <Grid x:Name="gridFooter" Grid.Row="2">
            <StatusBar
                Width="Auto"
                Height="20">
                <TextBlock Margin="3,0,0,0" Text="{Binding Debug}"/>
                <StatusBarItem HorizontalAlignment="Right">
                    <ResizeGrip Opacity="0.75"/>
                </StatusBarItem>
            </StatusBar>
        </Grid>
    </Grid>
</Window>
